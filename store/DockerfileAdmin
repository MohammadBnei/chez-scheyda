FROM node:22-slim AS base
WORKDIR /usr/src/app

RUN npm install -g bun

FROM node:22 AS install

WORKDIR /temp/prod

RUN npm i -g bun
COPY package.json bun.lockb ./
RUN bun install --frozen-lockfile --production

FROM base AS prerelease
COPY --from=install /temp/prod/node_modules node_modules
COPY . .

ARG MEDUSA_BACKEND_URL

ENV MEDUSA_ADMIN_BACKEND_URL=${MEDUSA_BACKEND_URL}
ENV MEDUSA_BACKEND_URL=${MEDUSA_BACKEND_URL}

ENV NODE_ENV=production
RUN bun run build:admin


FROM nginx:alpine AS release

RUN rm -rf /usr/share/nginx/html/*

COPY --from=prerelease /usr/src/app/build /usr/share/nginx/html/

EXPOSE 80

RUN echo 'server {' > /etc/nginx/conf.d/default.conf && \
    echo '    listen 80;' >> /etc/nginx/conf.d/default.conf && \
    echo '    root /usr/share/nginx/html/;' >> /etc/nginx/conf.d/default.conf && \
    echo '    index index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    location / {' >> /etc/nginx/conf.d/default.conf && \
    echo '        try_files $uri $uri/ /index.html;' >> /etc/nginx/conf.d/default.conf && \
    echo '    }' >> /etc/nginx/conf.d/default.conf && \
    echo '}' >> /etc/nginx/conf.d/default.conf

CMD ["nginx", "-g", "daemon off;"]